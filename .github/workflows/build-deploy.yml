name: Build and Deploy Code

on: [push, pull_request]

env:
  DATABASE_HOSTNAME: localhost1

jobs: 
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}_test
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-inteval 10s
          --health-retries 5
          --health-timeout 5s

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2 
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test env
        run: echo "$DATABASE_HOSTNAME"  
      - name: test with pytest
        run: |
          pip install pytest
          pytest -v -s

  deploy:
    
    runs-on: ubuntu-latest
    environment:
      name: testing
    steps:
      - name: Use Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
       
  job2:
    runs-on: ubuntu-latest
    environment:
      name: testing
    steps:
      - name: test env
        run: |
          echo " ${{ secrets.DATABASE_PORT }} "
          echo " ${{ secrets.DATABASE_HOSTNAME }} " 
          echo " ${{ secrets.DATABASE_PORT }} "
          echo " ${{ secrets.DATABASE_PASSWORD }} "
          echo " ${{ secrets.DATABASE_NAME }} "
          echo " ${{ secrets.DATABASE_USERNAME }} "
          echo " ${{ secrets.SECRET_KEY }} "
          echo " ${{ secrets.ALGORITHM }} "
          echo " ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} "

  